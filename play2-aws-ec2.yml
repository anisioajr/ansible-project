---
- name: Provisionar instâncias na AWS
  hosts: localhost
  vars:
    ansible_python_interpreter: "/usr/bin/python3.9"
    aws_region: "us-east-1"
  tasks:

    - name: Garantir que o diretório de destino exista
      file:
        path: /root/.aws
        state: directory
        owner: root
        group: root
        mode: '0700'

    - name: Copiar arquivo de credenciais AWS para o diretório root
      copy:
        src: /home/ec2-user/.aws/credentials
        dest: /root/.aws/credentials
        owner: root
        group: root
        mode: '0600'

    - name: Remover configuração anterior de IP ao grupo no arquivo ansible/hosts
      lineinfile:
        path: /etc/ansible/hosts
        insertafter: web-servers
        line: "web-server-1" 
        state: absent
      become: yes

    - name: Obter informações sobre as VPCs
      amazon.aws.ec2_vpc_net_info:
        region: "{{ aws_region }}"
      register: vpc_info

    - name: Filtrar a VPC padrão
      set_fact:
        default_vpc_id: "{{ item.id }}"
      loop: "{{ vpc_info.vpcs }}"
      when: item.instance_tenancy == 'default'

    - name: Obter informações das sub-redes da VPC padrão
      amazon.aws.ec2_vpc_subnet_info:
        region: "{{ aws_region }}"
        filters:
          vpc-id: "{{ default_vpc_id }}"
      register: default_subnet_info

    - name: Abrir as portas necessárias no security group
      ec2_group:
        name: default
        description: "Allow HTTP traffic"
        region: "{{ aws_region }}"
        rules:
          - proto: tcp
            from_port: 80
            to_port: 80
            cidr_ip: 0.0.0.0/0
          - proto: tcp
            from_port: 22
            to_port: 22
            cidr_ip: 0.0.0.0/0
          - proto: tcp
            from_port: 3306
            to_port: 3306
            cidr_ip: 0.0.0.0/0
        aws_access_key: "{{ lookup('env', 'AWS_ACCESS_KEY_ID') }}"
        aws_secret_access_key: "{{ lookup('env', 'AWS_SECRET_ACCESS_KEY') }}"
      register: update_sg
      when: update_sg.security_group is not defined or
            not update_sg.security_group.rules | selectattr('from_port', 'eq', 22) | list

    - name: Definir o ID da sub-rede da primeira AZ
      set_fact:
        first_subnet_id: "{{ default_subnet_info.subnets[0].id }}"

    - name: Provisionar instância EC2 para o servidor web
      amazon.aws.ec2_instance:
         name: "web-server-1"
         key_name: "0606key"
         region: "{{ aws_region }}"
         instance_type: t2.micro
         security_group: default
         network:
           assign_public_ip: true
           vpc_subnet_id: "{{ first_subnet_id }}" # subnet-0ef28efe8293628c4
         image_id: ami-0fe630eb857a6ec83
         tags:
           Environment: Testing
      register: ec2_remote_facts

    - name: Adicionar IP ao grupo específico no arquivo ansible/hosts
      lineinfile:
         path: /etc/ansible/hosts
         insertafter: web-servers
         line: "web-server-1 ansible_host={{ item.public_ip_address }}"
         state: present
      with_items: "{{ ec2_remote_facts.instances }}"
      delegate_to: localhost
      become: yes
