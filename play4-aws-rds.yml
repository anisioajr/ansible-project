---
- name: Provisionar instância RDS na AWS
  hosts: localhost
  gather_facts: no
  vars:
    ansible_python_interpreter: "/usr/bin/python3.9"
    my_ssh_key: "{{ lookup('file', '~/.ssh/id_rsa.pub') }}"
    aws_region: "us-east-1"
  tasks:
    - name: Instalar PyMySQL via pip3
      ansible.builtin.command:
        cmd: "pip3 install pymysql"
        executable: "{{ ansible_python_interpreter }}"
        creates: "/usr/local/lib/python3.x/dist-packages/PyMySQL"  # Caminho onde o pacote instalado fica


    - name: Obter informações sobre as VPCs
      amazon.aws.ec2_vpc_net_info:
        region: "{{ aws_region }}"
      register: vpc_info

    - name: Filtrar a VPC padrão
      set_fact:
        default_vpc_id: "{{ item.id }}"
      loop: "{{ vpc_info.vpcs }}"
      when: item.instance_tenancy == 'default'

    - name: Obter informações das sub-redes da VPC padrão
      amazon.aws.ec2_vpc_subnet_info:
        region: "{{ aws_region }}"
        filters:
          vpc-id: "{{ default_vpc_id }}"
      register: default_subnet_info

    - name: Criar grupo de sub-redes RDS
      amazon.aws.rds_subnet_group:
        state: present
        name: subgroup-mack-useast1-alunos1
        description: "Grupo de sub-redes para RDS"
        subnets: "{{ default_subnet_info.subnets | map(attribute='id') | list }}"
        region: "{{ aws_region }}"

    - name: Obter informações do grupo de segurança padrão da VPC padrão
      amazon.aws.ec2_security_group_info:
        region: "{{ aws_region }}"
        filters:
          vpc-id: "{{ default_vpc_id }}"
          group-name: default
      register: default_security_group_info

    - name: Criar instância RDS
      amazon.aws.rds_instance:
        db_instance_identifier: "rds-mack-useast1-alu1"
        db_instance_class: db.t3.micro
        engine: mysql
        engine_version: '8.0.36'
        allocated_storage: 20
        master_username: admin
        master_user_password: senha123
        db_name: dbAlunosIac
        db_subnet_group_name: subgroup-mack-useast1-alunos1
        vpc_security_group_ids:
          - "{{ default_security_group_info.security_groups[0].group_id }}"
        publicly_accessible: no
        state: present
        region: "{{ aws_region }}"
      register: rds

    - name: Esperar pela criação da instância RDS
      amazon.aws.rds_instance_info:
        db_instance_identifier: rds-mack-useast1-alu1
        region: "{{ aws_region }}"
      register: rds_info
      until: rds_info.instances[0].db_instance_status == 'available'
      retries: 30
      delay: 20

    - name: Adicionar IP ao grupo específico no arquivo ansible/hosts
      lineinfile:
        path: /etc/ansible/hosts
        insertafter: db-servers
        line: "dbAlunosIac ansible_host={{ rds_info.instances[0].endpoint.address }}:{{ rds_info.instances[0].endpoint.port }}"
        state: present
      delegate_to: localhost
      become: yes
    
    - name: Create a DB  in the database
      mysql_query:
        login_host: "{{ rds_info.instances[0].endpoint.address }}"
        login_port: "{{ rds_info.instances[0].endpoint.port }}"
        login_user: admin
        login_password: senha123
        query: "CREATE DATABASE IF NOT EXISTS dbAlunosIac"

    
    - name: Create a table in the database
      mysql_query:
        login_host: "{{ rds_info.instances[0].endpoint.address }}"
        login_port: "{{ rds_info.instances[0].endpoint.port }}"
        login_user: admin
        login_password: senha123
        login_db: "dbAlunosIac"
        query: "CREATE TABLE IF NOT EXISTS tb_register (id INT AUTO_INCREMENT PRIMARY KEY, created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP)"
